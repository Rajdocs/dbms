1. SELECT S.*, SS.SEM, SS.SEC FROM STUDENT S, SEMSEC SS, CLASS C WHERE S.USN=C.USN AND SS.SSID=C.SSID AND SS.SEM=4 AND SS.SEC='C';

2.  SELECT SS.SEM, SS.SEC, S.GENDER, COUNT(S.GENDER) AS COUNT FROM STUDENT S, SEMSEC SS, CLASS C WHERE S.USN = C.USN AND SS.SSID = C.SSID GROUP BY SS.SEM, SS.SEC, S.GENDER ORDER BY SS.SEM;

3. CREATE VIEW VW_STUDENT_TEST AS SELECT TEST1,SUBCODE FROM IAMARKS WHERE USN= '4AD13CS091';

4.CREATE OR REPLACE PROCEDURE AVGMARKS IS CURSOR C_IAMARKS IS SELECT GREATEST (TEST1, TEST2)   AS  A, GREATEST(TEST1,TEST3)   AS  B, GREATEST(TEST3,TEST2)   AS   C FROM IAMARKS WHERE FINALIA IS NULL FOR UPDATE;  C_A NUMBER; C_B NUMBER; C_C NUMBER; C_SM NUMBER; C_AV NUMBER; BEGIN  OPEN C_IAMARKS; LOOP FETCH C_IAMARKS INTO C_A,C_B,C_C; EXIT WHENC_IAMARKS%NOTFOUND; --DBMS_OUTPUT.PUT_LINE(C_A||’’||C_B||’’||C_C); IF(C_A!=C_B)THEN C_SM:=C_A+C_B; ELSE C_SM:=C_A+C_C; ENDIF; C_AV:=C_SM/2; DBMS_OUTPUT.PUT_LINE(‘SUM=’||C_SM); --DBMS_OUTPUT.PUT_LINE(‘AVERAGE=’||C_AV); UPDATE IAMARKS SET FINALIA=C_AV WHERE CURRENT OF C_IAMARKS; END LOOP; CLOSE C_IAMARKS; END;

5. SELECT S.USN,S.SNAME,S.ADDRESS,S.PHONE,S.GENDER,(CASE WHEN IA.FINALIA BETWEEN 17 AND 20 THEN 'OUTSTANDING' WHEN IA. FINALIA BETWEEN 12 AND 16 THEN 'AVERAGE' ELSE 'WEAK' END) AS CAT FROM STUDENT S, SEMSEC SS, IAMARKS IA, SUBJECT SUB WHERE S.USN = IA.USN AND SS.SSID = IA.SSID AND SUB.SUBCODE = IA.SUBCODE AND SUB.SEM = 8;

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

1. (SELECT DISTINCT P.PNO FROM PROJECT P, DEPARTMENT D, EMPLOYEE E WHERE E.DNO=D.DNO AND D.MGRSSN=E.SSN AND E.LNAME='SCOTT')
UNION 
(SELECT DISTINCT P1.PNO FROM PROJECT P1, WORKS_ON W, EMPLOYEE E1 WHERE P1.PNO=W.PNO AND E1.SSN=W.SSN AND E1.LNAME='SCOTT');

2. SELECT E.FNAME, E.LNAME, 1.1*E.SALARY AS INCR_SAL FROM EMPLOYEE E, 
WORKS_ON W, PROJECT P WHERE E.SSN=W.SSN AND W.PNO=P.PNO AND
P.PNAME='IOT';

3. SELECT SUM (E.SALARY), MAX (E.SALARY), MIN (E.SALARY), AVG (E.SALARY) 
FROM EMPLOYEE E, DEPARTMENT D WHERE E.DNO=D.DNO AND D.DNAME='ACCOUNTS';

4. SELECT E.FNAME,E.LNAME FROM EMPLOYEE E WHERE 
NOT EXISTS (SELECT PNO FROM PROJECT P WHERE 
DNO=5 AND PNO NOT IN (SELECT PNO FROM 
WORKS_ON W WHERE E.SSN=SSN));

5.  SELECT D.DNO, COUNT(*) FROM DEPARTMENT D, EMPLOYEE E WHERE D.DNO=E.DNO AND E.SALARY > 600000 AND D.DNO IN (SELECT E1.DNOFROM EMPLOYEE E1 GROUP BY E1.DNO HAVING COUNT(*)>=5) GROUP BY D.DNO;
